#!/bin/bash
# Script para testar comunica√ß√£o serial com m√≥dulo GNSS M10Fly
# Autor: Configura√ß√£o QtAgOpenGPS

echo "=== Teste de Comunica√ß√£o Serial - M√≥dulo GNSS M10Fly ==="
echo

# Verificar se o dispositivo serial existe
DEVICE="/dev/ttyAMA0"
ALT_DEVICE="/dev/ttyS0"

if [ -c "$DEVICE" ]; then
    GPS_DEVICE="$DEVICE"
    echo "‚úÖ Dispositivo encontrado: $GPS_DEVICE"
elif [ -c "$ALT_DEVICE" ]; then
    GPS_DEVICE="$ALT_DEVICE"
    echo "‚úÖ Dispositivo encontrado: $GPS_DEVICE"
else
    echo "‚ùå Nenhum dispositivo serial encontrado!"
    echo "   Verifique se:"
    echo "   - O m√≥dulo est√° conectado corretamente"
    echo "   - O UART foi habilitado (execute gps_setup.sh)"
    echo "   - O sistema foi reiniciado ap√≥s a configura√ß√£o"
    exit 1
fi

echo
echo "üìã Testando comunica√ß√£o serial..."
echo "   Dispositivo: $GPS_DEVICE"
echo "   Baud Rate: 115200"
echo "   Pressione Ctrl+C para parar"
echo

# Configurar porta serial e ler dados
stty -F $GPS_DEVICE 115200 cs8 -cstopb -parenb -echo -echoe -echok -echoctl -echoke

echo "üîç Aguardando dados NMEA..."
echo "   (Pode levar alguns segundos para o m√≥dulo inicializar)"
echo

# Contador para timeout
timeout_counter=0
max_timeout=30

# Ler dados da porta serial
while IFS= read -r line <&3; do
    # Verificar se √© uma senten√ßa NMEA v√°lida
    if [[ $line =~ ^\$[A-Z]{2}[A-Z]{3}, ]]; then
        echo "‚úÖ NMEA recebido: $line"
        
        # Identificar tipo de senten√ßa
        if [[ $line =~ ^\$[A-Z]{2}GGA, ]]; then
            echo "   üìç Senten√ßa GGA (Posi√ß√£o GPS) detectada"
        elif [[ $line =~ ^\$[A-Z]{2}RMC, ]]; then
            echo "   üß≠ Senten√ßa RMC (Dados m√≠nimos) detectada"
        elif [[ $line =~ ^\$[A-Z]{2}VTG, ]]; then
            echo "   üöÄ Senten√ßa VTG (Velocidade) detectada"
        elif [[ $line =~ ^\$[A-Z]{2}GSA, ]]; then
            echo "   üõ∞Ô∏è  Senten√ßa GSA (Sat√©lites ativos) detectada"
        elif [[ $line =~ ^\$[A-Z]{2}GSV, ]]; then
            echo "   üì° Senten√ßa GSV (Sat√©lites vis√≠veis) detectada"
        fi
        
        # Parar ap√≥s receber algumas senten√ßas v√°lidas
        ((timeout_counter++))
        if [ $timeout_counter -ge 10 ]; then
            echo
            echo "‚úÖ Teste conclu√≠do com sucesso!"
            echo "   O m√≥dulo GNSS est√° funcionando corretamente"
            break
        fi
    else
        # Mostrar dados n√£o-NMEA (pode ser ru√≠do ou configura√ß√£o)
        if [ ${#line} -gt 0 ]; then
            echo "üìÑ Dados recebidos: $line"
        fi
    fi
    
    # Timeout de seguran√ßa
    ((timeout_counter++))
    if [ $timeout_counter -ge 100 ]; then
        echo
        echo "‚ö†Ô∏è  Timeout atingido. Poss√≠veis problemas:"
        echo "   - M√≥dulo n√£o est√° enviando dados"
        echo "   - Baud rate incorreto"
        echo "   - Conex√£o f√≠sica com problemas"
        echo "   - M√≥dulo ainda inicializando"
        break
    fi
    
done 3< $GPS_DEVICE

echo
echo "üìã Informa√ß√µes do dispositivo:"
ls -la $GPS_DEVICE
echo
echo "üìã Configura√ß√£o atual da porta:"
stty -F $GPS_DEVICE -a
echo
echo "üí° Pr√≥ximos passos:"
echo "   1. Se viu senten√ßas NMEA: execute ./gps_bridge.py"
echo "   2. Se n√£o viu dados: verifique conex√µes f√≠sicas"
echo "   3. Se viu dados mas n√£o NMEA: verifique configura√ß√£o do m√≥dulo"